apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-example
spec:
  selector:
    matchLabels:
      app: go-example
  replicas: 2
  template:
    metadata:
      labels:
        app: go-example
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - go-example
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: go-example
        image: 847879610722.dkr.ecr.us-west-2.amazonaws.com/go-example:0.1
        ports:
        - containerPort: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: web-svc
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "external"
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
    service.beta.kubernetes.io/aws-load-balancer-attributes: "load_balancing.cross_zone.enabled=true"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "tcp"
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
spec:
  selector:
    app: go-example
  type: LoadBalancer
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8000